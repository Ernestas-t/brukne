---
import { Heart, Calendar, Utensils, Play } from 'lucide-astro';
import { t, getCurrentLanguage } from '../utils/i18n.js';

// Bruknė's birth date
const birthDate = new Date('2025-01-22');
const currentDate = new Date();

// Calculate age
function calculateAge(birthDate, currentDate) {
  let years = currentDate.getFullYear() - birthDate.getFullYear();
  let months = currentDate.getMonth() - birthDate.getMonth();
  let days = currentDate.getDate() - birthDate.getDate();

  // Adjust for negative days
  if (days < 0) {
    months--;
    const lastMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 0);
    days += lastMonth.getDate();
  }

  // Adjust for negative months
  if (months < 0) {
    years--;
    months += 12;
  }

  return { years, months, days };
}

const age = calculateAge(birthDate, currentDate);

// Bruknė's info with translation keys
const brukneFacts = {
  favoriteFood: [
    { key: 'food.chicken', defaultText: 'Vištienos skanėstai' },
    { key: 'food.sweetPotato', defaultText: 'Saldžioji bulvė' },
    { key: 'food.humanFood', defaultText: 'Žmonių maistas' },
    { key: 'food.forbidden', defaultText: 'Viskas ko negalima šunims' }
  ],
  likes: [
    { key: 'activity.fetch', defaultText: 'Žaidimas "atnešk"' },
    { key: 'activity.bellyRubs', defaultText: 'Pilvuko glostynės' },
    { key: 'activity.naps', defaultText: 'Saulėti miegučiai' },
    { key: 'activity.friends', defaultText: 'Naujų draugų pažintis' }
  ],
  personality: [
    { key: 'personality.gentle', defaultText: 'Švelni' },
    { key: 'personality.playful', defaultText: 'Žaisminga' },
    { key: 'personality.loyal', defaultText: 'Ištikima' },
    { key: 'personality.curious', defaultText: 'Smalsaus' }
  ]
};
---

<section id="about" class="relative py-20 px-4 bg-gradient-to-br from-sand via-blush/40 to-white overflow-hidden">
  <!-- Background Pattern -->
  <div class="absolute inset-0 opacity-5">
    <div class="absolute top-12 left-8 w-32 h-32 rounded-full bg-brown"></div>
    <div class="absolute bottom-24 right-12 w-24 h-24 rounded-full bg-brown"></div>
    <div class="absolute top-1/2 left-1/3 w-16 h-16 rounded-full bg-brown"></div>
  </div>
  
  <div class="relative max-w-6xl mx-auto">
    <!-- Header -->
    <div class="text-center mb-16">
      <h2 
        class="text-4xl md:text-5xl font-bold text-text mb-6"
        data-aos="fade-up"
        data-aos-duration="1000"
        data-translate="about.title"
      >
        Apie Bruknę 💕
      </h2>
      <p 
        class="text-lg md:text-xl text-text/70 font-light max-w-2xl mx-auto"
        data-aos="fade-up"
        data-aos-delay="200"
        data-aos-duration="1000"
        data-translate="about.subtitle"
      >
        Geriau pažinkite mūsų mielą mergaitę. Šie duomenys gali padėti atpažinti jos charakterį ir saugiai prie jos prieiti.
      </p>
    </div>

    <!-- Age Card - Featured -->
    <div 
      class="mb-12 flex justify-center"
      data-aos="fade-up"
      data-aos-delay="300"
      data-aos-duration="1000"
    >
      <div class="bg-white/80 backdrop-blur-xl rounded-3xl p-8 shadow-lg border border-white/50 max-w-md w-full">
        <div class="text-center">
          <div class="w-16 h-16 bg-brown/20 rounded-2xl flex items-center justify-center mx-auto mb-4">
            <Calendar class="w-8 h-8 text-brown" />
          </div>
          <h3 class="text-2xl font-bold text-text mb-2" data-translate="about.age">Amžius</h3>
          <p class="text-xl text-brown font-semibold mb-2" id="age-display">...</p>
          <p class="text-text/60 text-sm" data-translate="about.born">Gimė 2025 m. sausio 22 d.</p>
        </div>
      </div>
    </div>

    <!-- Facts Grid -->
    <div class="grid md:grid-cols-3 gap-8">
      
      <!-- Favorite Foods -->
      <div 
        class="bg-white/80 backdrop-blur-xl rounded-3xl p-8 shadow-lg border border-white/50 hover:shadow-xl transition-all duration-500 hover:scale-105"
        data-aos="fade-up"
        data-aos-delay="400"
        data-aos-duration="1000"
      >
        <div class="text-center mb-6">
          <div class="w-12 h-12 bg-orange-100 rounded-xl flex items-center justify-center mx-auto mb-4">
            <Utensils class="w-6 h-6 text-orange-600" />
          </div>
          <h3 class="text-xl font-bold text-text mb-4" data-translate="about.favoriteFood">Mėgstamas maistas</h3>
        </div>
        <div class="space-y-3" id="favorite-foods">
          {brukneFacts.favoriteFood.map((food, index) => (
            <div class="flex items-center gap-3 p-3 bg-orange-50/50 rounded-xl">
              <span class="text-orange-500">🍖</span>
              <span class="text-text/80 font-medium" data-translate={food.key}>{food.defaultText}</span>
            </div>
          ))}
        </div>
      </div>

      <!-- What She Likes -->
      <div 
        class="bg-white/80 backdrop-blur-xl rounded-3xl p-8 shadow-lg border border-white/50 hover:shadow-xl transition-all duration-500 hover:scale-105"
        data-aos="fade-up"
        data-aos-delay="500"
        data-aos-duration="1000"
      >
        <div class="text-center mb-6">
          <div class="w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center mx-auto mb-4">
            <Play class="w-6 h-6 text-green-600" />
          </div>
          <h3 class="text-xl font-bold text-text mb-4" data-translate="about.lovesToDo">Mėgsta daryti</h3>
        </div>
        <div class="space-y-3" id="activities">
          {brukneFacts.likes.map((activity, index) => (
            <div class="flex items-center gap-3 p-3 bg-green-50/50 rounded-xl">
              <span class="text-green-500">🎾</span>
              <span class="text-text/80 font-medium" data-translate={activity.key}>{activity.defaultText}</span>
            </div>
          ))}
        </div>
      </div>

      <!-- Personality -->
      <div 
        class="bg-white/80 backdrop-blur-xl rounded-3xl p-8 shadow-lg border border-white/50 hover:shadow-xl transition-all duration-500 hover:scale-105"
        data-aos="fade-up"
        data-aos-delay="600"
        data-aos-duration="1000"
      >
        <div class="text-center mb-6">
          <div class="w-12 h-12 bg-pink-100 rounded-xl flex items-center justify-center mx-auto mb-4">
            <Heart class="w-6 h-6 text-pink-600" />
          </div>
          <h3 class="text-xl font-bold text-text mb-4" data-translate="about.personality">Charakteris</h3>
        </div>
        <div class="space-y-3" id="personality">
          {brukneFacts.personality.map((trait, index) => (
            <div class="flex items-center gap-3 p-3 bg-pink-50/50 rounded-xl">
              <span class="text-pink-500">💝</span>
              <span class="text-text/80 font-medium" data-translate={trait.key}>{trait.defaultText}</span>
            </div>
          ))}
        </div>
      </div>
    </div>

    <!-- Safety Note -->
    <div 
      class="mt-12 text-center"
      data-aos="fade-up"
      data-aos-delay="700"
      data-aos-duration="1000"
    >
      <div class="inline-flex items-center gap-2 px-6 py-3 bg-blush/60 backdrop-blur-md rounded-full border border-brown/20">
        <span class="text-brown font-semibold" data-translate="about.safetyNote">Ji draugiška, bet gali būti išsigandusi - artinkitės atsargiai! 🤗</span>
      </div>
    </div>
  </div>
</section>

<script>
  import { t, getCurrentLanguage } from '../utils/i18n.js';
  
  // Age calculation and formatting with translations
  function formatAge(age, lang) {
    const parts = [];
    
    if (age.years > 0) {
      const yearWord = age.years === 1 ? t('age.year', lang) : t('age.years', lang);
      parts.push(`${age.years} ${yearWord}`);
    }
    if (age.months > 0) {
      const monthWord = age.months === 1 ? t('age.month', lang) : t('age.months', lang);
      parts.push(`${age.months} ${monthWord}`);
    }
    if (age.days > 0) {
      const dayWord = age.days === 1 ? t('age.day', lang) : t('age.days', lang);
      parts.push(`${age.days} ${dayWord}`);
    }
    
    if (parts.length === 0) return t('age.justBorn', lang);
    if (parts.length === 1) return parts[0];
    if (parts.length === 2) return parts.join(' ir ');
    return parts.slice(0, -1).join(', ') + ' ir ' + parts[parts.length - 1];
  }
  
  function calculateAge(birthDate, currentDate) {
    let years = currentDate.getFullYear() - birthDate.getFullYear();
    let months = currentDate.getMonth() - birthDate.getMonth();
    let days = currentDate.getDate() - birthDate.getDate();

    if (days < 0) {
      months--;
      const lastMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 0);
      days += lastMonth.getDate();
    }

    if (months < 0) {
      years--;
      months += 12;
    }

    return { years, months, days };
  }
  
  // Function to update about content
  function updateAboutContent(lang) {
    // Update all translatable elements
    const elements = document.querySelectorAll('[data-translate]');
    elements.forEach(element => {
      const key = element.getAttribute('data-translate');
      element.textContent = t(key, lang);
    });
    
    // Update age display with proper language formatting
    const birthDate = new Date('2025-01-22');
    const currentDate = new Date();
    const age = calculateAge(birthDate, currentDate);
    const ageString = formatAge(age, lang);
    
    const ageDisplay = document.getElementById('age-display');
    if (ageDisplay) {
      ageDisplay.textContent = ageString;
    }
  }
  
  // Initialize on page load
  document.addEventListener('DOMContentLoaded', function() {
    const currentLang = getCurrentLanguage();
    updateAboutContent(currentLang);
  });
  
  // Listen for language changes
  window.addEventListener('languageChanged', function(event) {
    updateAboutContent(event.detail.language);
  });
</script>
